import { Ratelimit } from "@upstash/ratelimit";
import { Redis } from "@upstash/redis";

export async function rateLimit(identifier: string) {
    // Создание экземпляра Ratelimit.
    const ratelimit = new Ratelimit({
        // Инициализация клиента Redis. Redis.fromEnv() автоматически берет конфигурацию
        // из переменных окружения. Это удобно для конфигурации подключения к Redis
        // без жесткого кодирования параметров в коде.
        redis: Redis.fromEnv(),

        // Настройка лимитера. Ratelimit.slidingWindow(10, "10 s") настраивает
        // скользящее окошко рейт-лимита, которое позволяет 10 запросов в течение 10 секунд.
        // Это означает, что пользователь может совершить не более 10 запросов в любой
        // 10-секундный интервал.
        limiter: Ratelimit.slidingWindow(10, "10 s"),

        // Включение аналитики. Когда `analytics` установлено в `true`, Ratelimit
        // будет собирать и сохранять статистику о количестве и распределении запросов.
        analytics: true,

        // Префикс для ключей в Redis. "@upstash/ratelimit" будет использоваться как префикс
        // для всех ключей, созданных Ratelimit в хранилище Redis. Это помогает
        // организовать и разделять данные для разных целей в вашем хранилище Redis.
        prefix: "@upstash/ratelimit",
    });

    // Вызов метода limit с переданным идентификатором. Этот метод проверяет,
    // не превышено ли ограничение для данного идентификатора. Возвращаемое значение
    // будет содержать информацию о том, разрешен ли запрос и сколько запросов
    // осталось.
    return await ratelimit.limit(identifier);
};
